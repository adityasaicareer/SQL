-- window functions

-- window functions were like a group by 
-- partition /group 


select gender,avg(salary) as averagesalary from employee_demographics dem
join employee_salary sal on dem.employee_id=sal.employee_id
group by gender;

-- now lets use the window function 

select DEM.FIRST_NAME,DEM.LAST_NAME,gender,avg(salary) OVER(PARTITION BY GENDER ORDER BY DEM.EMPLOYEE_ID) AS ROLLONGAVG,SUM(SALARY) OVER(PARTITION BY GENDER ORDER BY DEM.EMPLOYEE_ID ) 
from employee_demographics dem
join employee_salary sal on dem.employee_id=sal.employee_id;

-- GROUP BY WILL GIVE US THE ROW WISE

-- WINDOW FUNCTION WILL HELP US TO PRINT THE OTHER INFORMATION ALSO RATHER THAN GROUP BY

-- ROW NUMBER

SELECT 
GENDER,DEM.EMPLOYEE_ID,DEM.FIRST_NAME,DEM.LAST_NAME,AVG(SALARY) OVER(PARTITION BY GENDER),SUM(SALARY) OVER(PARTITION BY GENDER ORDER BY DEM.EMPLOYEE_ID),ROW_NUMBER() OVER(PARTITION BY GENDER)
FROM 
EMPLOYEE_DEMOGRAPHICS AS DEM JOIN EMPLOYEE_SALARY AS SAL ON DEM.EMPLOYEE_ID=SAL.EMPLOYEE_ID;

SELECT 
GENDER,
DEM.EMPLOYEE_ID,
DEM.FIRST_NAME,
DEM.LAST_NAME,

AVG(SALARY) OVER(PARTITION BY GENDER),
SUM(SALARY) OVER(PARTITION BY GENDER ORDER BY DEM.EMPLOYEE_ID),
ROW_NUMBER() OVER(PARTITION BY GENDER),
ROW_NUMBER() OVER(),
SALARY,
ROW_NUMBER() OVER(ORDER BY SALARY),
RANK() OVER(ORDER BY SALARY),
DENSE_RANK() OVER(ORDER BY SALARY)
FROM 
EMPLOYEE_DEMOGRAPHICS AS DEM JOIN EMPLOYEE_SALARY AS SAL ON DEM.EMPLOYEE_ID=SAL.EMPLOYEE_ID;

-- DENSE RANK WILL NOT SKIP THE RANK RATHET THAN RANK WHICH WILL ACTUALLY DO
